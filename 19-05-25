import tkinter as tk
from tkinter import messagebox
from tkinter import ttk

datos_guardados = []
contador_datos = 0

def inicio():
    area_dinamica_limpia()
    tk.Label(area_dinamica, text="Aquí va un mensaje de bienvenida", font=("Arial", 14)).pack(pady=10)
    tk.Button(area_dinamica, text="Mostrar Mensaje de Bienvenida", command=lambda: messagebox.showinfo("¡Hola!", "Bienvenido a este nuevo proyecto")).pack()

def datos():
    area_dinamica_limpia()
    global campo_nombre, grupo_elegido, combo_grado, resultado_label_datos

    tk.Label(area_dinamica, text="Nombre del Alumno:").pack()
    campo_nombre = tk.Entry(area_dinamica)
    campo_nombre.pack(pady=5)


    tk.Label(area_dinamica, text="Grupo:").pack()
    grupo_elegido = tk.StringVar(value="A")
    tk.Radiobutton(area_dinamica, text="A", variable=grupo_elegido, value="A").pack()
    tk.Radiobutton(area_dinamica, text="B", variable=grupo_elegido, value="B").pack()
    
    tk.Label(area_dinamica, text="¿Qué grado estás cursando?").pack()
    combo_grado = ttk.Combobox(area_dinamica, values=["Primero", "Segundo", "Tercero"])
    combo_grado.pack()
    combo_grado.current(0)



    tk.Button(area_dinamica, text="Guardar Datos", command=guardar_datos).pack(pady=10)

    resultado_label_datos = tk.Label(area_dinamica, text="", justify="left")
    resultado_label_datos.pack()

def guardar_datos():
    global contador_datos

    nombre = campo_nombre.get()
    grupo = grupo_elegido.get()
    grado = combo_grado.get()

    if nombre and grupo and grado:
            
        persona = {
            "Nombre": nombre,
            "Grupo": grupo,
            "Grado": grado,
        }
        datos_guardados.append(persona)
        contador_datos += 1

        campo_nombre.delete(0, tk.END)
        

        if contador_datos == 3:
            mostrar_datos()
    else:
        resultado_label_datos.config(text="Llena todos los campos")

def mostrar_datos():
    text = ""
    for i, persona in enumerate(datos_guardados, start=1):
        text += f"Alumno #{i}\n"
        text += f"Nombre: {persona['Nombre']}\n"
        text += f"Grupo: {persona['Grupo']}\n"
        text += f"Grado: {persona['Grado']}\n"
       

def colores():
    area_dinamica_limpia()
    tk.Label(area_dinamica, text="Colores", font=("Arial", 14)).pack(pady=10)

    colores_disponibles = ["lightblue", "lightgreen", "lightyellow", "lightgray", "white"]
    tk.Label(area_dinamica, text="Cambiar fondo:").pack()

    def cambiar_color(color):
        ventana_principal.config(bg=color)
        menu_lateral.config(bg=color)
        area_dinamica.config(bg=color)

    for color in colores_disponibles:
        tk.Button(area_dinamica, text=color, bg=color, width=20, command=lambda c=color: cambiar_color(c)).pack(pady=2)

def preguntas():
    area_dinamica_limpia()
    tk.Label(area_dinamica, text="Responde el siguiente cuestionario en tu libreta", font=("Arial", 14)).pack(pady=10)
    contenido = (
        "Explica con tus palabras:\n\n"
        "- ¿Qué hace cada botón?\n"
        "- ¿Qué cambias si modificas un texto?\n"
        "- ¿Cómo cambias un color?\n"
        "- ¿Qué debes renombrar?"
    )
    tk.Label(area_dinamica, text=contenido, justify="left").pack(pady=10)

def area_dinamica_limpia():
    for widget in area_dinamica.winfo_children():
        widget.destroy()

ventana_principal = tk.Tk()
ventana_principal.title("Interfaz para prácticas")
ventana_principal.geometry("700x400")
ventana_principal.config(bg="lightblue")

menu_lateral = tk.Frame(ventana_principal, bg="lightblue", width=120)
menu_lateral.pack(side="left", fill="y")

area_dinamica = tk.Frame(ventana_principal, bg="white")
area_dinamica.pack(side="right", expand=True, fill="both")

tk.Button(menu_lateral, text="Inicio ", command=inicio, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Datos del alumno", command=datos, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Color de Fondo", command=colores, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Cuestionario", command=preguntas, width=15).pack(pady=10)
tk.Button(menu_lateral, text="Salir", command=ventana_principal.destroy, width=15).pack(pady=30)

inicio()
ventana_principal.mainloop()
